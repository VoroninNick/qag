#devise-content
  #devise_sessions-new-get-form-wrap.devise-form-wrap
    .form-title
      = flash[:title] || t('devise.sessions.header')

    - if !flash[:notice].nil?
      .notice
        = flash[:notice]
    - if !flash[:unlogged_text].nil?
      .unlogged-text
        .unlogged-header
          = flash[:unlogged_text][:unlogged_header]
        .unlogged-text-part-1
          = flash[:unlogged_text][:unlogged_text_1]
        br
        .unlogged-text-part-2
          = flash[:unlogged_text][:unlogged_text_2]
        br

    .errors


    = simple_form_for(resource, as: resource_name, url: session_path(resource_name, locale: I18n.locale)) do |f|
      .form-inputs
        = f.input :email, required: true, autofocus: true, label: false, placeholder: t('devise.sessions.placeholders.email'), input_html: {data: {validate: "email, notEmpty"}}, wrapper_html: { data: { validate: 'email required',   :"error-taken" => t('activerecord.errors.models.user.attributes.email.taken'), :"error-empty" => t('activerecord.errors.models.user.attributes.email.empty'), :"error-invalid" => t('activerecord.errors.models.user.attributes.email.invalid') , help: t('activerecord.help.models.user.attributes.email') } }
        = f.input :password, required: true, label: false, placeholder: t('devise.sessions.placeholders.password'), input_html: {data: {validate: "notEmpty"}}, wrapper_html: { data: { validate: 'password required' } }
        = f.input :remember_me, as: :boolean, label: t('devise.sessions.remember_me') if devise_mapping.rememberable?
        - if devise_mapping.recoverable? && controller_name != 'passwords' && controller_name != 'registrations'
          = link_to t('shared.links.forgot_password'), new_password_path(resource_name, locale: I18n.locale), class: 'popup-link forgot-password link-to-input', data: { input: "#devise_passwords-new-get-flag" }
      .form-actions
        - if devise_mapping.registerable? && controller_name != 'registrations'
          .sign-up-link-wrapper
            = link_to t('shared.links.sign_up'), new_registration_path(resource_name, locale: I18n.locale), class: 'popup-link sign-up link-to-input', data: { input: "#devise_registrations-new-get-flag" }
        .sign-in-submit-button-wrapper
          = f.button :submit, t('devise.sessions.sign_in_button'), class: 'input-submit login sign-in-submit-button devise-submit-button orange-bg'

    / render "devise/shared/links"
